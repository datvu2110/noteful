{"ast":null,"code":"import _classCallCheck from \"/Users/beetee/Downloads/Bloc/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beetee/Downloads/Bloc/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beetee/Downloads/Bloc/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beetee/Downloads/Bloc/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beetee/Downloads/Bloc/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/beetee/Downloads/Bloc/noteful/src/AddNote/AddNote.js\",\n    _this3 = this;\n\nimport React from 'react';\nimport ApiContext from '../ApiContext';\nimport './AddNote.css';\nimport config from '../config';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      content: '',\n      folderId: ''\n    };\n\n    _this.handleAddNote = function (noteId) {\n      _this.props.history.push('/');\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var folderId = document.getElementById(\"folderSelection\").value;\n      var name = _this.state.name;\n      var content = _this.state.content;\n\n      var noteId = _this.noteID();\n\n      var date = Date.now();\n      var note = {\n        id: noteId,\n        name: name,\n        modified: date,\n        folderId: folderId,\n        content: content\n      };\n\n      _this.setState({\n        error: null\n      });\n\n      fetch(\"\".concat(config.API_ENDPOINT, \"/notes\"), {\n        method: 'POST',\n        body: JSON.stringify(note),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (data) {\n        _this.context.addNote(data);\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"noteID\",\n    value: function noteID() {\n      return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n    }\n  }, {\n    key: \"selectFormOnChangeTest\",\n    value: function selectFormOnChangeTest() {\n      console.log('hello?');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var folderInfo = this.context.folders;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"folderSelection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Select a Folder\"), React.createElement(\"select\", {\n        name: \"folderSelection\",\n        id: \"folderSelection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, folderInfo.map(function (folder) {\n        return React.createElement(\"option\", {\n          value: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, folder.name);\n      })), React.createElement(\"label\", {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Note name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Name of note\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.currentTarget.value\n          });\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"content\",\n        id: \"content\",\n        placeholder: \"Note content\",\n        value: this.state.content,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            content: e.currentTarget.value\n          });\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.defaultProps = {\n  onAddNote: function onAddNote() {\n    return _this3.props.history.push('/');\n  }\n};\nAddNote.contextType = ApiContext;\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/noteful/src/AddNote/AddNote.js"],"names":["React","ApiContext","config","AddNote","state","name","content","folderId","handleAddNote","noteId","props","history","push","handleSubmit","e","preventDefault","document","getElementById","value","noteID","date","Date","now","note","id","modified","setState","error","fetch","API_ENDPOINT","method","body","JSON","stringify","headers","then","res","ok","json","Promise","reject","data","context","addNote","catch","Math","random","toString","replace","substr","console","log","folderInfo","folders","map","folder","currentTarget","Component","defaultProps","onAddNote","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ApiContext from '../ApiContext'\nimport './AddNote.css'\nimport config from '../config'\n\nexport default class AddNote extends React.Component {\n    state = {\n        name: '',\n        content: '',\n        folderId: '',\n    }\n\n    static defaultProps ={\n        onAddNote: () => this.props.history.push('/')\n      }\n\n      noteID() {\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10); \n      }\n\n      static contextType = ApiContext;\n\n      handleAddNote = noteId => {\n        this.props.history.push('/')\n      }\n\n      handleSubmit = e => {\n        e.preventDefault()\n        const folderId = document.getElementById(\"folderSelection\").value;\n        let name = this.state.name\n        let content = this.state.content\n        const noteId = this.noteID()\n        const date = Date.now()\n        const note = {\n            id: noteId,\n            name: name,\n            modified: date,\n            folderId: folderId,\n            content: content\n        }\n        this.setState({ error: null })\n\n        fetch(`${config.API_ENDPOINT}/notes`, {\n          method: 'POST',\n          body: JSON.stringify(note),\n          headers: {\n            'content-type': 'application/json'\n          }\n        })\n          .then(res => {\n            if (!res.ok)\n              return res.json().then(e => Promise.reject(e))\n            return res.json()\n          })\n          .then(data => {\n            this.context.addNote(data)\n            this.props.history.push('/')\n          })\n          .catch(error => {\n            this.setState({ error })\n          })\n      }\n\n      selectFormOnChangeTest() {\n        console.log('hello?')\n      }\n    \n\n    render() {\n      const folderInfo = this.context.folders;\n       return(\n        <div>\n          <form onSubmit = {this.handleSubmit}>\n            <label for=\"folderSelection\">Select a Folder</label>\n            <select name=\"folderSelection\" id=\"folderSelection\">\n              {folderInfo.map(folder =>\n                <option \n                value={folder.id}              \n                >{folder.name}</option>\n                )}\n            </select>\n\n            <label for=\"name\">Note name</label>\n            <input \n            type='text'\n            name='name'\n            id='name'\n            placeholder=\"Name of note\"\n            value={this.state.name}\n            onChange= {(e) => this.setState({name: e.currentTarget.value})}\n            required />\n\n            <label for=\"content\">Content</label>\n            <textarea \n            type='text'\n            name='content'\n            id='content'\n            placeholder='Note content'\n            value={this.state.content}\n            onChange= {(e) => this.setState({content: e.currentTarget.value})}\n            required />\n            <br></br>\n            <button>Submit</button>\n        </form> \n        </div>\n        \n       ) \n    }\n}\n"]},"metadata":{},"sourceType":"module"}
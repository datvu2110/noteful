{"ast":null,"code":"import _regeneratorRuntime from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/beetee/Documents/noteful/src/AddFolder/AddFolder.js\";\nimport React from 'react';\nimport ApiContext from '../ApiContext';\nimport NotePageNave from '../NotePageMain/NotePageMain';\nimport config from '../config';\n\nvar AddFolder = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  var _super = _createSuper(AddFolder);\n\n  function AddFolder() {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: ''\n    };\n\n    _this.handleAddNote = function () {\n      _this.props.history.push('/');\n    };\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var id, folder, res, dataJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); // get the form fields from the event\n\n                id = _this.folderID();\n                folder = {\n                  id,\n                  title: _this.state.name\n                };\n\n                _this.setState({\n                  error: null\n                });\n\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(\"\".concat(config.API_ENDPOINT, \"/api/folders\"), {\n                  method: 'POST',\n                  body: JSON.stringify(folder),\n                  headers: {\n                    'content-type': 'application/json'\n                  }\n                });\n\n              case 7:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", res.json().then(function (e) {\n                  return Promise.reject(e);\n                }));\n\n              case 10:\n                _context.next = 12;\n                return res.json();\n\n              case 12:\n                dataJson = _context.sent;\n\n                _this.context.addFolder(dataJson);\n\n                _this.props.history.push('/');\n\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.setState({\n                  error: _context.t0\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"folderID\",\n    value: function folderID() {\n      return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Folder Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Folder Name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.currentTarget.value\n          });\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.defaultProps = {\n  addFolder: function addFolder() {},\n  history: {\n    goBack: function goBack() {}\n  },\n  match: {\n    params: {}\n  }\n};\nAddFolder.contextType = ApiContext;\nexport { AddFolder as default };","map":{"version":3,"sources":["/Users/beetee/Documents/noteful/src/AddFolder/AddFolder.js"],"names":["React","ApiContext","NotePageNave","config","AddFolder","state","name","handleAddNote","props","history","push","handleSubmit","e","preventDefault","id","folderID","folder","title","setState","error","fetch","API_ENDPOINT","method","body","JSON","stringify","headers","res","ok","json","then","Promise","reject","dataJson","context","addFolder","Math","random","toString","replace","substr","currentTarget","value","Component","defaultProps","goBack","match","params","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ApiContext from '../ApiContext'\nimport NotePageNave from '../NotePageMain/NotePageMain'\nimport config from '../config'\n\n\n\nexport default class AddFolder extends React.Component {\n    state = {\n      name: ''\n    }\n\n    static defaultProps ={\n        addFolder: () => {},\n        history: {\n            goBack: () => { }\n          },\n          match: {\n            params: {}\n          }\n      }\n\n      folderID() {\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10); \n      }\n\n      static contextType = ApiContext;\n\n      handleAddNote = () => {\n        this.props.history.push('/')\n      }\n\n      handleSubmit = async (e) => {\n        e.preventDefault()\n        // get the form fields from the event\n        const id = this.folderID()\n        const folder = {\n          id,\n          title: this.state.name}\n        this.setState({ error: null })\n\n        try {\n          const res = await fetch(`${config.API_ENDPOINT}/api/folders`, {\n            method: 'POST',\n            body: JSON.stringify(folder),\n            headers: {\n              'content-type': 'application/json'\n            }\n          })\n          if (!res.ok) {\n            return res.json().then(e => Promise.reject(e))\n          }\n          const dataJson = await res.json()\n          this.context.addFolder(dataJson)\n          this.props.history.push('/')\n        \n        } catch (e) {\n          this.setState({ error: e })\n        }        \n      }\n\n    render() {\n       return(\n        <form onSubmit = {this.handleSubmit}>\n          <label for = \"name\">Folder Name</label>\n          <input \n          type='text'\n          name='name'\n          id='name'\n          placeholder=\"Folder Name\"\n          value={this.state.name}\n          onChange={(e) => this.setState({name: e.currentTarget.value})}\n          required />\n          <button type='submit'>Submit</button>\n        </form> \n       ) \n    }\n}\n"]},"metadata":{},"sourceType":"module"}
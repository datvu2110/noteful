{"ast":null,"code":"import _classCallCheck from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/beetee/Documents/noteful/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/beetee/Documents/noteful/src/AddNote/AddNote.js\";\nimport React from 'react';\nimport ApiContext from '../ApiContext';\nimport './AddNote.css';\nimport config from '../config';\nimport PropTypes from 'prop-types';\n\nvar AddNote = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  var _super = _createSuper(AddNote);\n\n  function AddNote() {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      content: '',\n      folderId: ''\n    };\n\n    _this.handleAddNote = function (noteId) {\n      _this.props.history.push('/');\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var folderId = document.getElementById(\"folderSelection\").value;\n      var title = _this.state.name;\n      var content = _this.state.content;\n\n      var noteId = _this.noteID();\n\n      var date = Date.now();\n      var note = {\n        id: noteId,\n        title: title,\n        modified: date,\n        folder_id: folderId,\n        note_contents: content\n      };\n\n      _this.setState({\n        error: null\n      });\n\n      fetch(\"\".concat(config.API_ENDPOINT, \"/api/notes\"), {\n        method: 'POST',\n        body: JSON.stringify(note),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (data) {\n        _this.context.addNote(data);\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        _this.setState({\n          error\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"noteID\",\n    value: function noteID() {\n      return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var folders = this.context.folders;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"folderSelection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, \"Select a Folder\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"folderSelection\",\n        id: \"folderSelection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, folders.map(function (folder) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: folder.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, folder.title);\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"Note name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Name of note\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.currentTarget.value\n          });\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, \"Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"content\",\n        id: \"content\",\n        placeholder: \"Note content\",\n        value: this.state.content,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            content: e.currentTarget.value\n          });\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.defaultProps = {\n  onAddNote: function onAddNote() {\n    return AddNote.props.history.push('/');\n  }\n};\nAddNote.contextType = ApiContext;\nexport { AddNote as default };\n\nAddNote: PropTypes.exact({\n  name: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired\n});","map":{"version":3,"sources":["/Users/beetee/Documents/noteful/src/AddNote/AddNote.js"],"names":["React","ApiContext","config","PropTypes","AddNote","state","name","content","folderId","handleAddNote","noteId","props","history","push","handleSubmit","e","preventDefault","document","getElementById","value","title","noteID","date","Date","now","note","id","modified","folder_id","note_contents","setState","error","fetch","API_ENDPOINT","method","body","JSON","stringify","headers","then","res","ok","json","Promise","reject","data","context","addNote","catch","Math","random","toString","replace","substr","folders","map","folder","currentTarget","Component","defaultProps","onAddNote","contextType","exact","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ApiContext from '../ApiContext'\nimport './AddNote.css'\nimport config from '../config'\nimport PropTypes from 'prop-types'\n\nexport default class AddNote extends React.Component {\n    state = {\n        name: '',\n        content: '',\n        folderId: '',\n    }\n\n    static defaultProps ={\n        onAddNote: () => this.props.history.push('/')\n      }\n\n      noteID() {\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10); \n      }\n\n      static contextType = ApiContext;\n\n      handleAddNote = noteId => {\n        this.props.history.push('/')\n      }\n\n      handleSubmit = e => {\n        e.preventDefault()\n        const folderId = document.getElementById(\"folderSelection\").value;\n        let title = this.state.name\n        let content = this.state.content\n        const noteId = this.noteID()\n        const date = Date.now()\n        const note = {\n            id: noteId,\n            title: title,\n            modified: date,\n            folder_id: folderId,\n            note_contents: content\n        }\n        this.setState({ error: null })\n\n        fetch(`${config.API_ENDPOINT}/api/notes`, {\n          method: 'POST',\n          body: JSON.stringify(note),\n          headers: {\n            'content-type': 'application/json'\n          }\n        })\n          .then(res => {\n            if (!res.ok)\n              return res.json().then(e => Promise.reject(e))\n            return res.json()\n          })\n          .then(data => {\n\n            this.context.addNote(data)\n            this.props.history.push('/')\n          })\n          .catch(error => {\n            this.setState({ error })\n          })\n      }\n\n\n    render() {\n      const {folders} = this.context;\n       return(\n        <div>\n          <form onSubmit = {this.handleSubmit}>\n            <label for=\"folderSelection\">Select a Folder</label>\n            <select name=\"folderSelection\" id=\"folderSelection\">\n              {folders.map(folder =>\n                <option \n                value={folder.id}\n                >{folder.title}</option>\n                )}\n            </select>\n\n            <label htmlFor=\"name\">Note name</label>\n            <input \n              type='text'\n              name='name'\n              id='name'\n              placeholder=\"Name of note\"\n              value={this.state.name}\n              onChange= {(e) => this.setState({name: e.currentTarget.value})}\n              required />\n\n            <label htmlFor=\"content\">Content</label>\n            <textarea \n              type='text'\n              name='content'\n              id='content'\n              placeholder='Note content'\n              value={this.state.content}\n              onChange= {(e) => this.setState({content: e.currentTarget.value})}\n              required />\n            <br></br>\n            <button>Submit</button>\n        </form> \n        </div>\n        \n       ) \n    }\n}\nAddNote:PropTypes.exact({\n  name: PropTypes.string.isRequired,\n  content:PropTypes.string.isRequired,\n})"]},"metadata":{},"sourceType":"module"}